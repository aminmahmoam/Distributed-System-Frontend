{"remainingRequest":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/vue-loader/lib/loaders/templateLoader.js??ref--5!/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aminmahmoudi/Desktop/DIT356/client 2/client/src/views/SignUp.vue?vue&type=template&id=6f83b81c&","dependencies":[{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/src/views/SignUp.vue","mtime":1670418662756},{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1655712169000},{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uIHJlbmRlcigpIHsKICB2YXIgX3ZtID0gdGhpcywKICAgIF9jID0gX3ZtLl9zZWxmLl9jCiAgcmV0dXJuIF9jKCJkaXYiLCBbCiAgICBfdm0uX20oMCksCiAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImxvZ2luLWJveCIgfSwgWwogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvcm0tZ3JvdXAiIH0sIFsKICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmFjY291bnQuZmlyc3ROYW1lLAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJhY2NvdW50LmZpcnN0TmFtZSIsCiAgICAgICAgICAgIH0sCiAgICAgICAgICBdLAogICAgICAgICAgc3RhdGljQ2xhc3M6ICJmb3JtLWNvbnRyb2wiLAogICAgICAgICAgc3RhdGljU3R5bGU6IHsKICAgICAgICAgICAgYmFja2dyb3VuZDogIiNERUU5RkYiLAogICAgICAgICAgICAiYm94LXNoYWRvdyI6ICIwcHggNHB4IDRweCByZ2JhKDE0MywgMTQ1LCAxOTAsIDAuMjUpIiwKICAgICAgICAgIH0sCiAgICAgICAgICBhdHRyczogeyB0eXBlOiAidGV4dCIsIHBsYWNlaG9sZGVyOiAiRmlyc3QgTmFtZSIsIHZhbHVlOiAiIiB9LAogICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5hY2NvdW50LmZpcnN0TmFtZSB9LAogICAgICAgICAgb246IHsKICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVybgogICAgICAgICAgICAgIF92bS4kc2V0KF92bS5hY2NvdW50LCAiZmlyc3ROYW1lIiwgJGV2ZW50LnRhcmdldC52YWx1ZSkKICAgICAgICAgICAgfSwKICAgICAgICAgIH0sCiAgICAgICAgfSksCiAgICAgIF0pLAogICAgICBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogImZvcm0tZ3JvdXAiIH0sIFsKICAgICAgICBfYygiaW5wdXQiLCB7CiAgICAgICAgICBkaXJlY3RpdmVzOiBbCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiAibW9kZWwiLAogICAgICAgICAgICAgIHJhd05hbWU6ICJ2LW1vZGVsIiwKICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmFjY291bnQubGFzdE5hbWUsCiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImFjY291bnQubGFzdE5hbWUiLAogICAgICAgICAgICB9LAogICAgICAgICAgXSwKICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZm9ybS1jb250cm9sIiwKICAgICAgICAgIHN0YXRpY1N0eWxlOiB7CiAgICAgICAgICAgIGJhY2tncm91bmQ6ICIjREVFOUZGIiwKICAgICAgICAgICAgImJveC1zaGFkb3ciOiAiMHB4IDRweCA0cHggcmdiYSgxNDMsIDE0NSwgMTkwLCAwLjI1KSIsCiAgICAgICAgICB9LAogICAgICAgICAgYXR0cnM6IHsgdHlwZTogInRleHQiLCBwbGFjZWhvbGRlcjogIkxhc3QgTmFtZSIsIHZhbHVlOiAiIiB9LAogICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5hY2NvdW50Lmxhc3ROYW1lIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgcmV0dXJuCiAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmFjY291bnQsICJsYXN0TmFtZSIsICRldmVudC50YXJnZXQudmFsdWUpCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9LAogICAgICAgIH0pLAogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWdyb3VwIiB9LCBbCiAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgdmFsdWU6IF92bS5hY2NvdW50LmVtYWlsLAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJhY2NvdW50LmVtYWlsIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIF0sCiAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCIsCiAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICBiYWNrZ3JvdW5kOiAiI0RFRTlGRiIsCiAgICAgICAgICAgICJib3gtc2hhZG93IjogIjBweCA0cHggNHB4IHJnYmEoMTQzLCAxNDUsIDE5MCwgMC4yNSkiLAogICAgICAgICAgfSwKICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJ0ZXh0IiwgcGxhY2Vob2xkZXI6ICJFbWFpbCIsIHZhbHVlOiAiIiB9LAogICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5hY2NvdW50LmVtYWlsIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgcmV0dXJuCiAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmFjY291bnQsICJlbWFpbCIsICRldmVudC50YXJnZXQudmFsdWUpCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9LAogICAgICAgIH0pLAogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWdyb3VwIiB9LCBbCiAgICAgICAgX2MoImlucHV0IiwgewogICAgICAgICAgZGlyZWN0aXZlczogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbmFtZTogIm1vZGVsIiwKICAgICAgICAgICAgICByYXdOYW1lOiAidi1tb2RlbCIsCiAgICAgICAgICAgICAgdmFsdWU6IF92bS5hY2NvdW50LnBhc3N3b3JkLAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJhY2NvdW50LnBhc3N3b3JkIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIF0sCiAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCIsCiAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICBiYWNrZ3JvdW5kOiAiI0RFRTlGRiIsCiAgICAgICAgICAgICJib3gtc2hhZG93IjogIjBweCA0cHggNHB4IHJnYmEoMTQzLCAxNDUsIDE5MCwgMC4yNSkiLAogICAgICAgICAgfSwKICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJwYXNzd29yZCIsIHBsYWNlaG9sZGVyOiAiUGFzc3dvcmQiLCB2YWx1ZTogIiIgfSwKICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0uYWNjb3VudC5wYXNzd29yZCB9LAogICAgICAgICAgb246IHsKICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHsKICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVybgogICAgICAgICAgICAgIF92bS4kc2V0KF92bS5hY2NvdW50LCAicGFzc3dvcmQiLCAkZXZlbnQudGFyZ2V0LnZhbHVlKQogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZm9ybS1ncm91cCIgfSwgWwogICAgICAgIF9jKCJpbnB1dCIsIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICJtb2RlbCIsCiAgICAgICAgICAgICAgcmF3TmFtZTogInYtbW9kZWwiLAogICAgICAgICAgICAgIHZhbHVlOiBfdm0ucmVwZWF0UGFzc3dvcmQsCiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogInJlcGVhdFBhc3N3b3JkIiwKICAgICAgICAgICAgfSwKICAgICAgICAgIF0sCiAgICAgICAgICBzdGF0aWNDbGFzczogImZvcm0tY29udHJvbCIsCiAgICAgICAgICBzdGF0aWNTdHlsZTogewogICAgICAgICAgICBiYWNrZ3JvdW5kOiAiI0RFRTlGRiIsCiAgICAgICAgICAgICJib3gtc2hhZG93IjogIjBweCA0cHggNHB4IHJnYmEoMTQzLCAxNDUsIDE5MCwgMC4yNSkiLAogICAgICAgICAgfSwKICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgIHR5cGU6ICJwYXNzd29yZCIsCiAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAiQ29uZmlybSBQYXNzd29yZCIsCiAgICAgICAgICAgIHZhbHVlOiAiIiwKICAgICAgICAgIH0sCiAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLnJlcGVhdFBhc3N3b3JkIH0sCiAgICAgICAgICBvbjogewogICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgcmV0dXJuCiAgICAgICAgICAgICAgX3ZtLnJlcGVhdFBhc3N3b3JkID0gJGV2ZW50LnRhcmdldC52YWx1ZQogICAgICAgICAgICB9LAogICAgICAgICAgfSwKICAgICAgICB9KSwKICAgICAgXSksCiAgICAgIF9jKCJkaXYiLCB7IHN0YXRpY0NsYXNzOiAiZm9ybS1ncm91cCIgfSwgWwogICAgICAgIF9jKAogICAgICAgICAgImRpdiIsCiAgICAgICAgICB7CiAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAiZWRpdC1idXR0b24iLAogICAgICAgICAgICBzdGF0aWNTdHlsZTogeyBjb2xvcjogIiM3NDhGQzQiIH0sCiAgICAgICAgICAgIGF0dHJzOiB7IGhyZWY6ICIvIiB9LAogICAgICAgICAgfSwKICAgICAgICAgIFtfYygiaCIsIHsgc3RhdGljQ2xhc3M6ICJlZGl0LXRleHQiIH0sIFtfdm0uX3YoIlNpZ24gVXAiKV0pXSwKICAgICAgICAgIDEKICAgICAgICApLAogICAgICBdKSwKICAgICAgX2MoImRpdiIsIHsgc3RhdGljQ2xhc3M6ICJmb3JtLWdyb3VwIiB9LCBbCiAgICAgICAgX2MoCiAgICAgICAgICAicCIsCiAgICAgICAgICBbCiAgICAgICAgICAgIF92bS5fdigiRG9uJ3QgaGF2ZSBhbiBhY2NvdW50PyAiKSwKICAgICAgICAgICAgX2MoInJvdXRlci1saW5rIiwgeyBhdHRyczogeyB0bzogImxvZ2luIiB9IH0sIFtfdm0uX3YoIkxvZyBJbiAiKV0pLAogICAgICAgICAgXSwKICAgICAgICAgIDEKICAgICAgICApLAogICAgICBdKSwKICAgIF0pLAogIF0pCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFsKICBmdW5jdGlvbiAoKSB7CiAgICB2YXIgX3ZtID0gdGhpcywKICAgICAgX2MgPSBfdm0uX3NlbGYuX2MKICAgIHJldHVybiBfYygiZGl2IiwgeyBzdGF0aWNDbGFzczogIm1hcC1ib2R5IiB9LCBbCiAgICAgIF9jKAogICAgICAgICJwIiwKICAgICAgICB7CiAgICAgICAgICBzdGF0aWNDbGFzczogIm1hcC10ZXh0IiwKICAgICAgICAgIHN0YXRpY1N0eWxlOiB7IGNvbG9yOiAiIzc0OEZDNCIsICJmb250LXN0eWxlIjogImJvbGQiIH0sCiAgICAgICAgfSwKICAgICAgICBbX3ZtLl92KCJTSUdOIFVQIildCiAgICAgICksCiAgICBdKQogIH0sCl0KcmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlCgpleHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9"}]}
{"remainingRequest":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aminmahmoudi/Desktop/DIT356/client 2/client/src/views/Home.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/src/views/Home.vue","mtime":1670515962005},{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBUYWJOYXYgZnJvbSAnLi4vY29tcG9uZW50cy9UYWJOYXYudnVlJwppbXBvcnQgVGFiIGZyb20gJy4uL2NvbXBvbmVudHMvVGFiLnZ1ZScKaW1wb3J0IGNsaW5pY1Nsb3QgZnJvbSAnLi4vY29tcG9uZW50cy9DbGluaWNTbG90cy52dWUnCmltcG9ydCBtYXBGaWVsZCBmcm9tICcuLi9jb21wb25lbnRzL01hcC52dWUnCmltcG9ydCB7IENhbGVuZGFyLCBEYXRlUGlja2VyIH0gZnJvbSAndi1jYWxlbmRhcic7CmltcG9ydCBtcXR0IGZyb20gJy4uL01RVFQnCmltcG9ydCByb3V0ZXIgZnJvbSAnLi4vcm91dGVyJwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdob21lJywKICBwcm9wczogWydob21lJ10sCiAgY29tcG9uZW50czogeyBUYWJOYXYsIFRhYiwgY2xpbmljU2xvdCwgbWFwRmllbGQsIENhbGVuZGFyLCBEYXRlUGlja2VyfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5nZXRDbGluaWNzKCk7CiAgfSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZEwxOiBbXSwKICAgICAgRGVudGlzdDE6IFtdLAogICAgICBkTDI6IFtdLAogICAgICBkTDM6IFtdLAogICAgICB0YWJzOiBbXSwKICAgICAgc2VsZWN0ZWQ6ICJEZW50aXN0MSIsCiAgICAgIG1lc3NhZ2U6ICdub25lJywKICAgICAgZGF0ZTogbmV3IERhdGUoKSwKICAgICAgc2VsZWN0ZWREYXk6IG5ldyBEYXRlKCksCiAgICAgIGNsaW5pY3M6ICcnLAogICAgICBjbGluaWNOYW1lOiAnJywKCiAgICAgIGZ1bGxzOiBbCiAgICAgICAgewogICAgICAgICAgaWQ6IDEsCiAgICAgICAgICBkZXNjcmlwdGlvbjogJ05vIFZhY2FuY3knLAogICAgICAgICAgZGF0ZTogbmV3IERhdGUoMjAyMiwgMTEsIDE1KSwKICAgICAgICAgIGlzQ29tcGxldGVkOiBmYWxzZSwKICAgICAgICAgIGNvbG9yOiAncmVkJwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgaWQ6IDEsCiAgICAgICAgICBkZXNjcmlwdGlvbjogJ05vIFZhY2FuY3knLAogICAgICAgICAgZGF0ZTogbmV3IERhdGUoMjAyMiwgMTEsIDEyKSwKICAgICAgICAgIGlzQ29tcGxldGVkOiBmYWxzZSwKICAgICAgICAgIGNvbG9yOiAncmVkJwogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgaWQ6IDEsCiAgICAgICAgICBkZXNjcmlwdGlvbjogJ0hvbGlkYXknLAogICAgICAgICAgZGF0ZTogbmV3IERhdGUoMjAyMiwgMTEsIDI0KSwKICAgICAgICAgIGlzQ29tcGxldGVkOiBmYWxzZSwKICAgICAgICAgIGNvbG9yOiAncmVkJwogICAgICAgIH0sCiAgICAgIF0KICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBhdHRyaWJ1dGVzKCkgewogICAgICByZXR1cm4gdGhpcy5mdWxscy5tYXAoZiA9PiAoewogICAgICAgIGtleTogYGZ1bGwuJHtmLmlkfWAsCiAgICAgICAgaGlnaGxpZ2h0OiAicmVkIiwKICAgICAgICBkYXRlczogZi5kYXRlLAogICAgICAgIGN1c3RvbURhdGE6IGYsCiAgICAgICAgcG9wb3ZlcjogewogICAgICAgICAgbGFiZWw6IGYuZGVzY3JpcHRpb24sCiAgICAgICAgICB2aXNpYmlsaXR5OiAnZm9jdXMnLAogICAgICAgICAgaGlkZUluZGljYXRvcjogdHJ1ZSwKICAgICAgICB9CiAgICAgIH0pKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICBzZWxlY3RlZERheShuZXdWYWx1ZSwgb2xkVmFsdWUpIHsKICAgICAgY29uc29sZS5sb2codGhpcy5jbGluaWNOYW1lKQogICAgICB0aGlzLnN0YXJ0Qm9va2luZyh0aGlzLmNsaW5pY05hbWUpCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICB3ZWJjYW1TZW5kUmVxdWVzdEJ1dHRvbihlKSB7CiAgICAgaWYgKCF0aGlzLnNlbGVjdGVkRGF5LmRhdGUpIHsKICAgICAgY29uc29sZS5sb2codGhpcy5zZWxlY3RlZERheSkKICAgICAgbGV0IGRhdGUgPSBuZXcgRGF0ZSh0aGlzLnNlbGVjdGVkRGF5KQogICAgICBkYXRlID0gZGF0ZS50b0lTT1N0cmluZygpLnJlcGxhY2UoJy4wMDBaJywgJycpCiAgICAgIHJvdXRlci5wdXNoKHsgcGF0aDogJy9ib29raW5nJywgcXVlcnk6IHsgbmFtZTogdGhpcy5jbGluaWNOYW1lLCBkYXRlOiBkYXRlLCB0aW1lOiBlLnRhcmdldC50ZXh0Q29udGVudCwgZGVudGlzdDogdGhpcy5zZWxlY3RlZH0gfSkKICAgICB9IGVsc2UgewogICAgICBjb25zb2xlLmxvZyh0aGlzLnNlbGVjdGVkRGF5LmlkKQogICAgICAvL2xldCBkYXRlID0gbmV3IERhdGUodGhpcy5zZWxlY3RlZERheS5kYXRlKQogICAgICAvL2RhdGUgPSBkYXRlLnRvSVNPU3RyaW5nKCkucmVwbGFjZSgnLjAwMFonLCAnJykKICAgICAgcm91dGVyLnB1c2goeyBwYXRoOiAnL2Jvb2tpbmcnLCBxdWVyeTogeyBuYW1lOiB0aGlzLmNsaW5pY05hbWUsIGRhdGU6IHRoaXMuc2VsZWN0ZWREYXkuaWQsIHRpbWU6IGUudGFyZ2V0LnRleHRDb250ZW50LCBkZW50aXN0OiB0aGlzLnNlbGVjdGVkfSB9KQogICAgIH0KCiAgfSwKICAgIHNldFNlbGVjdGVkKFRhYikgewogICAgICB0aGlzLnNlbGVjdGVkID0gVGFiCiAgICB9LAogICAgc3RhcnRCb29raW5nKG5hbWUpIHsKICAgICAgbGV0IGRhdGVTdHIKICAgICAgbGV0IGRhdGUgCiAgICAgIGxldCBhcnJheQogICAgICBsZXQgZGF5CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2VsZWN0ZWREYXkpCgogICAgICBpZiAoIXRoaXMuc2VsZWN0ZWREYXkuZGF0ZSkgewogICAgICAgIGRhdGVTdHIgPSB0aGlzLnNlbGVjdGVkRGF5CiAgICAgICAgY29uc29sZS5sb2coZGF0ZVN0ci5nZXRVVENEYXkoKSkKICAgICAgICBkYXRlID0gbmV3IERhdGUoZGF0ZVN0cikudG9JU09TdHJpbmcoKQogICAgICAgIGRheSA9IGRhdGVTdHIuZ2V0VVRDRGF5KCkKCiAgICAgIH0gZWxzZSB7CiAgICAgICAgZGF0ZVN0ciA9IHRoaXMuc2VsZWN0ZWREYXkuZGF0ZQogICAgICAgIGNvbnNvbGUubG9nKGRhdGVTdHIpCiAgICAgICAgZGF0ZSA9IG5ldyBEYXRlKGRhdGVTdHIpLnRvSVNPU3RyaW5nKCkKICAgICAgICBhcnJheSA9IHRoaXMuc2VsZWN0ZWREYXkuYXJpYUxhYmVsLnNwbGl0KCcsJykKICAgICAgICBkYXkgPSBhcnJheVswXQogICAgICB9CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdib29raW5nJykuc2Nyb2xsSW50b1ZpZXcoewogICAgICAgIGJlaGF2aW9yOiAic21vb3RoIgogICAgICB9KTsKICAgICAgdGhpcy5jbGluaWNOYW1lID0gbmFtZQogICAgICBsZXQgcmVzdWx0ID0gdGhpcy5nZXRUaW1lU3RvcHMoZGF5LCBuYW1lKQogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICB0aGlzLnJlbW92ZUJvb2tlZChkYXRlLCByZXN1bHQpCiAgICAgIH0sIDEwMDApCgoKICAgIH0sCiAgICBnZXRDbGluaWNzKCkgewogICAgICBsZXQgcmVzcG9uc2UgPSBtcXR0KCdnZXRBbGxDJywgJy9jbGluaWNzJywgdGhpcy5kYXRhKQogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICB0aGlzLmNsaW5pY3MgPSByZXNwb25zZVswXS5kYXRhLmRlbnRpc3RzCiAgICAgICAgY29uc29sZS5sb2codGhpcy5jbGluaWNzKQogICAgICB9LCAxMDAwKQogICAgfSwKICAgIGRheUNsaWNrZWQoZGF5KSB7CiAgICAgIHRoaXMuc2VsZWN0ZWREYXkgPSBkYXk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2VsZWN0ZWREYXkpCiAgICAgIGNvbnNvbGUubG9nKHRoaXMuc2VsZWN0ZWREYXkuZGF0ZSkKICAgIH0sCiAgICAvKgogICAgZ2V0UmVzdWx0U2xvdHM6IGZ1bmN0aW9uICgpIHsKICAgICAgY29uc3QgZGF5ID0gbmV3IERhdGUoKS5nZXREYXkoKQogICAgICBsZXQgcmVzdWx0ID0gdGhpcy5nZXRUaW1lU3RvcHMoZGF5LCAnVG9vdGggRmFpcnkgRGVudGlzdCcpCiAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHRoaXMucmVtb3ZlQm9va2VkKCcyMDIwLTAxLTA4VDAwOjAwOjAwLjAwMCswMDowMCcsIHJlc3VsdCkKICAgICAgfSwgMTAwMCkKICAgIH0sCiAgICAqLwogICAgcmVtb3ZlQm9va2VkOiBmdW5jdGlvbiAoZGF0ZSwgbGlzdCkgewogICAgICBjb25zdCBkYXRhID0ge30KICAgICAgLy9kYXRlID0gJzIwMjAtMDEtMDhUMDA6MDA6MDAuMDAwWicKICAgICAgbGV0IHJlc3VsdCA9IG1xdHQoJ2dldEJvb2tpbmdzJywgJy9ib29raW5ncycsIGRhdGEpCiAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIGxldCBib29raW5ncyA9IHJlc3VsdFswXS5kYXRhLmJvb2tpbmdzCiAgICAgICAgY29uc29sZS5sb2coYm9va2luZ3MpCiAgICAgICAgbGV0IHNpemUgPSBib29raW5ncy5sZW5ndGggCiAgICAgICAgbGV0IGluZGV4TCA9IFtdCiAgICAgICAgZm9yIChsZXQgaSA9IHNpemUgLSAxOyBpID49IDA7IGktLSkgewogICAgICAgICAgaWYgKGJvb2tpbmdzW2ldLmRhdGUgIT0gZGF0ZSkgewogICAgICAgICAgICBib29raW5ncy5zcGxpY2UoaSwgMSkKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBib29raW5ncy5sZW5ndGg7IGkrKykgewogICAgICAgIGlmIChib29raW5nc1tpXS5kZW50aXN0SWQgPT09IDEpIHsKICAgICAgICAgIHRoaXMuZEwxID0gbGlzdFswXQogICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmRMMS5pbmRleE9mKGJvb2tpbmdzW2ldLnRpbWUpCiAgICAgICAgICB0aGlzLmRMMS5zcGxpY2UoaW5kZXgsIDEpCiAgICAgICAgfSBlbHNlIGlmIChib29raW5nc1tpXS5kZW50aXN0SWQgPT09IDIpIHsKICAgICAgICAgIHRoaXMuZEwyID0gbGlzdFsxXQogICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmRMMi5pbmRleE9mKGJvb2tpbmdzW2ldLnRpbWUpCiAgICAgICAgICB0aGlzLmRMMi5zcGxpY2UoaW5kZXgsIDEpCiAgICAgICAgfSBlbHNlIGlmIChib29raW5nc1tpXS5kZW50aXN0SWQgPT09IDMpIHsKICAgICAgICAgIHRoaXMuZEwzID0gbGlzdFsyXQogICAgICAgICAgY29uc3QgaW5kZXggPSB0aGlzLmRMMy5pbmRleE9mKGJvb2tpbmdzW2ldLnRpbWUpCiAgICAgICAgICB0aGlzLmRMMy5zcGxpY2UoaW5kZXgsIDEpCiAgICAgICAgfQogICAgICB9CiAgICAgIH0sIDEwMDApCiAgICB9LAogICAgYm9vazogZnVuY3Rpb24gKCkgewogICAgICB0aGlzLm5ld0Jvb2tpbmcgPSB7CiAgICAgICAgdXNlcklkOiB0aGlzLnVzZXJJZCwKICAgICAgICByZXF1ZXN0SWQ6IHRoaXMucmVxdWVzdElkLAogICAgICAgIGRlbnRpc3RJZDogdGhpcy5kZW50aXN0SWQsCiAgICAgICAgaXNzdWFuY2U6IHRoaXMuaXNzdWFuY2UsCiAgICAgICAgZGF0ZTogdGhpcy5uZXdEYXRlCiAgICAgIH0KICAgICAgY29uc3QgcmVzdWx0ID0gbXF0dCgnYm9vaycsICcvYm9va2luZ3MnLCB0aGlzLm5ld0Jvb2tpbmcpCiAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCkKICAgICAgICBpZiAocmVzdWx0LnN0YXR1cyA9PT0gMjAxKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygnc3VjY2VzZnVsbCcpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCd1bnN1Y2NzZXNmdWxsJykKICAgICAgICB9CiAgICAgIH0sIDEwMDApCiAgICB9LAoKICAgIGdldFRpbWVTdG9wczogZnVuY3Rpb24gKGRheSwgY2xpbmljKSB7CiAgICAgIGNvbnNvbGUubG9nKGRheSwgY2xpbmljKQogICAgICBjb25zdCBjbGluaWNzID0gbXF0dCgnZ2V0QWxsQycsICcvY2xpbmljcycsIHRoaXMuZGF0YSkKICAgICAgbGV0IHN0YXJ0CiAgICAgIGxldCBlbmQKICAgICAgbGV0IG9wZW5pbmdIb3VycwogICAgICB0aGlzLmNsaW5pY05hbWUgPSBjbGluaWMKICAgICAgLy8gdGhlIHRpbWVzbG90cyBvZiBlYWNoIGRheQogICAgICBjb25zdCBmaW5hbFNsb3RzID0gW10KICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgY29uc29sZS5sb2coY2xpbmljcykKICAgICAgICBjb25zdCByZXN1bHRDbGluaWMgPSBjbGluaWNzWzBdLmRhdGEuZGVudGlzdHMKICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHRDbGluaWMpCiAgICAgICAgZm9yIChsZXQgaSA9IDM7IGkgPj0gMDsgaS0tKSB7CiAgICAgICAgICBpZiAocmVzdWx0Q2xpbmljW2ldLm5hbWUgIT09IGNsaW5pYykgewogICAgICAgICAgICByZXN1bHRDbGluaWMuc3BsaWNlKGksIDEpCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmIChkYXkgPT09ICdNb25kYXknIHx8IGRheSA9PT0gMCkgewogICAgICAgICAgb3BlbmluZ0hvdXJzID0gcmVzdWx0Q2xpbmljWzBdLm9wZW5pbmdob3Vyc1swXS5tb25kYXkKICAgICAgICB9IGVsc2UKICAgICAgICBpZiAoZGF5ID09PSAnVHVlc2RheScgfHwgZGF5ID09PSAxKSB7CiAgICAgICAgICBvcGVuaW5nSG91cnMgPSByZXN1bHRDbGluaWNbMF0ub3BlbmluZ2hvdXJzWzFdLnR1ZXNkYXkKICAgICAgICB9IGVsc2UKICAgICAgICBpZiAoZGF5ID09PSAnV2VkbmVzZGF5JyB8fCBkYXkgPT09IDIpIHsKICAgICAgICAgIG9wZW5pbmdIb3VycyA9IHJlc3VsdENsaW5pY1swXS5vcGVuaW5naG91cnNbMl0ud2VkbmVzZGF5CiAgICAgICAgfSBlbHNlCiAgICAgICAgaWYgKGRheSA9PT0gJ1RodXJzZGF5JyB8fCBkYXkgPT09IDMpIHsKICAgICAgICAgIG9wZW5pbmdIb3VycyA9IHJlc3VsdENsaW5pY1swXS5vcGVuaW5naG91cnNbM10udGh1cnNkYXkKICAgICAgICB9IGVsc2UKICAgICAgICBpZiAoZGF5ID09PSAnRnJpZGF5JyB8fCBkYXkgPT09IDQpIHsKICAgICAgICAgIG9wZW5pbmdIb3VycyA9IHJlc3VsdENsaW5pY1swXS5vcGVuaW5naG91cnNbNF0uZnJpZGF5CiAgICAgICAgfQogICAgICAgIGNvbnN0IHRpbWVTdG9wcyA9IFtdCiAgICAgICAgY29uc3QgYXJyYXkgPSBvcGVuaW5nSG91cnMuc3BsaXQoJy0nKQogICAgICAgIHN0YXJ0ID0gYXJyYXlbMF0KICAgICAgICBlbmQgPSBhcnJheVsxXQogICAgICAgIGxldCBzdGFydFRpbWUgPSBtb21lbnQoc3RhcnQsICdISDptbScpCiAgICAgICAgY29uc3QgZW5kVGltZSA9IG1vbWVudChlbmQsICdISDptbScpCiAgICAgICAgY29uc3QgYnJlYWtTID0gJzEyOjAwJwogICAgICAgIGNvbnN0IGJyZWFrRSA9ICcxMzozMCcKICAgICAgICBsZXQgYnJlYWtTdGFydCA9IG1vbWVudChicmVha1MsICdISDptbScpCiAgICAgICAgY29uc3QgYnJlYWtFbmQgPSBtb21lbnQoYnJlYWtFLCAnSEg6bW0nKQogICAgICAgIGlmIChlbmRUaW1lLmlzQmVmb3JlKHN0YXJ0VGltZSkpIHsKICAgICAgICAgIGVuZFRpbWUuYWRkKDEsICdkYXknKQogICAgICAgIH0KICAgICAgICB3aGlsZSAoc3RhcnRUaW1lIDw9IGVuZFRpbWUpIHsKICAgICAgICAgIHRpbWVTdG9wcy5wdXNoKChuZXcgbW9tZW50KHN0YXJ0VGltZSkuZm9ybWF0KCdISDptbScpKSkKICAgICAgICAgIHN0YXJ0VGltZSA9IHN0YXJ0VGltZS5hZGQoMzAsICdtaW51dGVzJykKICAgICAgICB9CiAgICAgICAgd2hpbGUgKGJyZWFrU3RhcnQgPCBicmVha0VuZCkgewogICAgICAgICAgY29uc3QgaW5kZXggPSB0aW1lU3RvcHMuaW5kZXhPZigobmV3IG1vbWVudChicmVha1N0YXJ0KS5mb3JtYXQoJ0hIOm1tJykpKQogICAgICAgICAgaWYgKGluZGV4ID4gLTEpIHsKICAgICAgICAgICAgdGltZVN0b3BzLnNwbGljZShpbmRleCwgMSkKICAgICAgICAgIH0KICAgICAgICAgIGJyZWFrU3RhcnQgPSBicmVha1N0YXJ0LmFkZCgzMCwgJ21pbnV0ZXMnKQogICAgICAgIH0KICAgICAgICB0aGlzLnRhYnMgPSBbXQogICAgICAgIGZvciAobGV0IGogPSAwOyBqIDwgcmVzdWx0Q2xpbmljWzBdLmRlbnRpc3RzOyBqKyspIHsKICAgICAgICAgIGxldCB0YWIgPSAnRGVudGlzdCcgKyAoaisxKQogICAgICAgICAgdGhpcy50YWJzLnB1c2godGFiKQogICAgICAgICAgdGhpcy50YWIgPSB0aW1lU3RvcHMKICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuRGVudGlzdDEpCiAgICAgICAgICB0aGlzLmRMMSA9IHRpbWVTdG9wcwogICAgICAgICAgdGhpcy5kTDIgPSB0aW1lU3RvcHMKICAgICAgICAgIHRoaXMuZEwzID0gdGltZVN0b3BzIAogICAgICAgICAgZmluYWxTbG90cy5wdXNoKHRpbWVTdG9wcykKICAgICAgICB9CiAgICAgICAgY29uc29sZS5sb2coZmluYWxTbG90cykKICAgICAgfSwgMTAwMCkKICAgICAgcmV0dXJuIGZpbmFsU2xvdHMKICAgIH0KICB9Cn0K"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";AAufile":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div class=\"map-body\">\n     <p style=\"color: #748FC4;\" class=\"map-text\">FIND THE LOCATION OF YOUR CLINIC AND BOOK AN APPOINTMENT.</p>\n    </div>\n    <div style=\"margin-top: -50px\" class=\"middle-part\">\n     <div class=\"map\" style=\"display: inline-block;\">\n      <mapField></mapField>\n     </div>\n     <div style=\"display: inline-block; vertical-align: top; margin-top: 75px;\" v-for=\"clinic in clinics\" v-bind:key=\"clinic._id\" >\n        <clinicSlot v-bind:clinic=\"clinic\" v-on:book-slot=\"startBooking\"/>\n    </div>\n      \n    </div>\n\n    <div id=\"booking\">\n    \n      <div class=\"tabs\">\n        <TabNav :tabs=\"this.tabs\" :selected=\"selected\" @selected=\"setSelected\">\n          <Tab :isSelected=\"selected === 'Dentist1'\">\n              <ul class=\"list-of-courses-ul\">\n                <li class=\"list-of-courses-li\" v-for=\"slot in dL1\" v-bind:key=\"slot\">\n                 <button \n                 @click=\"webcamSendRequestButton($event)\"\n                 :value=\"slot\">\n                 {{ slot }}</button>\n                </li>\n              </ul>\n          </Tab>\n          <Tab :isSelected=\"selected === 'Dentist2'\">\n              <ul class=\"list-of-courses-ul\">\n                <li class=\"list-of-courses-li\" v-for=\"slot in dL2\" v-bind:key=\"slot\">\n                 <button\n                 @click=\"webcamSendRequestButton($event)\"\n                 :value=\"slot\">\n                 {{ slot }}</button>\n                </li>\n              </ul>\n          </Tab>\n          <Tab :isSelected=\"selected === 'Dentist3'\">\n              <ul class=\"list-of-courses-ul\">\n                <li class=\"list-of-courses-li\" v-for=\"slot in dL3\" v-bind:key=\"slot\">\n                 <button\n                 @click=\"webcamSendRequestButton($event)\"\n                 :value=\"slot\">\n                 {{ slot }}</button>\n                </li>\n              </ul>\n          </Tab>\n        </TabNav>\n\n      </div>\n\n      <div>\n        <DatePicker\n        v-model=\"date\"\n        mode=\"date\"\n        is-inline\n        title-position=\"left\"\n        :is-expanded=\"$screens({ default: true, lg: false })\"\n        :attributes='attributes'\n        @dayclick='dayClicked'\n      />\n      </div>\n\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport TabNav from '../components/TabNav.vue'\nimport Tab from '../components/Tab.vue'\nimport clinicSlot from '../components/ClinicSlots.vue'\nimport mapField from '../components/Map.vue'\nimport { Calendar, DatePicker } from 'v-calendar';\nimport mqtt from '../MQTT'\nimport router from '../router'\n\nexport default {\n  name: 'home',\n  props: ['home'],\n  components: { TabNav, Tab, clinicSlot, mapField, Calendar, DatePicker},\n  mounted() {\n    this.getClinics();\n  },\n  data() {\n    return {\n      dL1: [],\n      Dentist1: [],\n      dL2: [],\n      dL3: [],\n      tabs: [],\n      selected: \"Dentist1\",\n      message: 'none',\n      date: new Date(),\n      selectedDay: new Date(),\n      clinics: '',\n      clinicName: '',\n\n      fulls: [\n        {\n          id: 1,\n          description: 'No Vacancy',\n          date: new Date(2022, 11, 15),\n          isCompleted: false,\n          color: 'red'\n        },\n        {\n          id: 1,\n          description: 'No Vacancy',\n          date: new Date(2022, 11, 12),\n          isCompleted: false,\n          color: 'red'\n        },\n        {\n          id: 1,\n          description: 'Holiday',\n          date: new Date(2022, 11, 24),\n          isCompleted: false,\n          color: 'red'\n        },\n      ]\n    }\n  },\n  computed: {\n    attributes() {\n      return this.fulls.map(f => ({\n        key: `full.${f.id}`,\n        highlight: \"red\",\n        dates: f.date,\n        customData: f,\n        popover: {\n          label: f.description,\n          visibility: 'focus',\n          hideIndicator: true,\n        }\n      }));\n    }\n  },\n  watch: {\n    selectedDay(newValue, oldValue) {\n      console.log(this.clinicName)\n      this.startBooking(this.clinicName)\n    }\n  },\n  methods: {\n    webcamSendRequestButton(e) {\n     if (!this.selectedDay.date) {\n      console.log(this.selectedDay)\n      let date = new Date(this.selectedDay)\n      date = date.toISOString().replace('.000Z', '')\n      router.push({ path: '/booking', query: { name: this.clinicName, date: date, time: e.target.textContent, dentist: this.selected} })\n     } else {\n      console.log(this.selectedDay.id)\n      //let date = new Date(this.selectedDay.date)\n      //date = date.toISOString().replace('.000Z', '')\n      router.push({ path: '/booking', query: { name: this.clinicName, date: this.selectedDay.id, time: e.target.textContent, dentist: this.selected} })\n     }\n\n  },\n    setSelected(Tab) {\n      this.selected = Tab\n    },\n    startBooking(name) {\n      let dateStr\n      let date \n      let array\n      let day\n      console.log(this.selectedDay)\n\n      if (!this.selectedDay.date) {\n        dateStr = this.selectedDay\n        console.log(dateStr.getUTCDay())\n        date = new Date(dateStr).toISOString()\n        day = dateStr.getUTCDay()\n\n      } else {\n        dateStr = this.selectedDay.date\n        console.log(dateStr)\n        date = new Date(dateStr).toISOString()\n        array = this.selectedDay.ariaLabel.split(',')\n        day = array[0]\n      }\n      document.getElementById('booking').scrollIntoView({\n        behavior: \"smooth\"\n      });\n      this.clinicName = name\n      let result = this.getTimeStops(day, name)\n      setTimeout(() => {\n        this.removeBooked(date, result)\n      }, 1000)\n\n\n    },\n    getClinics() {\n      let response = mqtt('getAllC', '/clinics', this.data)\n      setTimeout(() => {\n        this.clinics = response[0].data.dentists\n        console.log(this.clinics)\n      }, 1000)\n    },\n    dayClicked(day) {\n      this.selectedDay = day;\n      console.log(this.selectedDay)\n      console.log(this.selectedDay.date)\n    },\n    /*\n    getResultSlots: function () {\n      const day = new Date().getDay()\n      let result = this.getTimeStops(day, 'Tooth Fairy Dentist')\n      setTimeout(() => {\n        this.removeBooked('2020-01-08T00:00:00.000+00:00', result)\n      }, 1000)\n    },\n    */\n    removeBooked: function (date, list) {\n      const data = {}\n      //date = '2020-01-08T00:00:00.000Z'\n      let result = mqtt('getBookings', '/bookings', data)\n      setTimeout(() => {\n        let bookings = result[0].data.bookings\n        console.log(bookings)\n        let size = bookings.length \n        let indexL = []\n        for (let i = size - 1; i >= 0; i--) {\n          if (bookings[i].date != date) {\n            bookings.splice(i, 1)\n          }\n        }\n        for (let i = 0; i < bookings.length; i++) {\n        if (bookings[i].dentistId === 1) {\n          this.dL1 = list[0]\n          const index = this.dL1.indexOf(bookings[i].time)\n          this.dL1.splice(index, 1)\n        } else if (bookings[i].dentistId === 2) {\n          this.dL2 = list[1]\n          const index = this.dL2.indexOf(bookings[i].time)\n          this.dL2.splice(index, 1)\n        } else if (bookings[i].dentistId === 3) {\n          this.dL3 = list[2]\n          const index = this.dL3.indexOf(bookings[i].time)\n          this.dL3.splice(index, 1)\n        }\n      }\n      }, 1000)\n    },\n    book: function () {\n      this.newBooking = {\n        userId: this.userId,\n        requestId: this.requestId,\n        dentistId: this.dentistId,\n        issuance: this.issuance,\n        date: this.newDate\n      }\n      const result = mqtt('book', '/bookings', this.newBooking)\n      setTimeout(() => {\n        console.log(result)\n        if (result.status === 201) {\n          console.log('succesfull')\n        } else {\n          console.log('unsuccsesfull')\n        }\n      }, 1000)\n    },\n\n    getTimeStops: function (day, clinic) {\n      console.log(day, clinic)\n      const clinics = mqtt('getAllC', '/clinics', this.data)\n      let start\n      let end\n      let openingHours\n      this.clinicName = clinic\n      // the timeslots of each day\n      const finalSlots = []\n      setTimeout(() => {\n        console.log(clinics)\n        const resultClinic = clinics[0].data.dentists\n        console.log(resultClinic)\n        for (let i = 3; i >= 0; i--) {\n          if (resultClinic[i].name !== clinic) {\n            resultClinic.splice(i, 1)\n          }\n        }\n        if (day === 'Monday' || day === 0) {\n          openingHours = resultClinic[0].openinghours[0].monday\n        } else\n        if (day === 'Tuesday' || day === 1) {\n          openingHours = resultClinic[0].openinghours[1].tuesday\n        } else\n        if (day === 'Wednesday' || day === 2) {\n          openingHours = resultClinic[0].openinghours[2].wednesday\n        } else\n        if (day === 'Thursday' || day === 3) {\n          openingHours = resultClinic[0].openinghours[3].thursday\n        } else\n        if (day === 'Friday' || day === 4) {\n          openingHours = resultClinic[0].openinghours[4].friday\n        }\n        const timeStops = []\n        const array = openingHours.split('-')\n        start = array[0]\n        end = array[1]\n        let startTime = moment(start, 'HH:mm')\n        const endTime = moment(end, 'HH:mm')\n        const breakS = '12:00'\n        const breakE = '13:30'\n        let breakStart = moment(breakS, 'HH:mm')\n        const breakEnd = moment(breakE, 'HH:mm')\n        if (endTime.isBefore(startTime)) {\n          endTime.add(1, 'day')\n        }\n        while (startTime <= endTime) {\n          timeStops.push((new moment(startTime).format('HH:mm')))\n          startTime = startTime.add(30, 'minutes')\n        }\n        while (breakStart < breakEnd) {\n          const index = timeStops.indexOf((new moment(breakStart).format('HH:mm')))\n          if (index > -1) {\n            timeStops.splice(index, 1)\n          }\n          breakStart = breakStart.add(30, 'minutes')\n        }\n        this.tabs = []\n        for (let j = 0; j < resultClinic[0].dentists; j++) {\n          let tab = 'Dentist' + (j+1)\n          this.tabs.push(tab)\n          this.tab = timeStops\n          console.log(this.Dentist1)\n          this.dL1 = timeStops\n          this.dL2 = timeStops\n          this.dL3 = timeStops \n          finalSlots.push(timeStops)\n        }\n        console.log(finalSlots)\n      }, 1000)\n      return finalSlots\n    }\n  }\n}\n</script>\n\n<style>\n.clinic-box {\n    height: auto;\n    margin-top: 15px;\n    padding-top: 11px;\n  width: 500px;\n  color:#748FC4;\n  background: #ffffff;\n  margin-left: 70px;\n  border-radius: 10px 10px 10px 10px;\n  box-sizing: border-box;\n  box-shadow: 0px 4px 4px rgba(143, 145, 190, 0.25);\n  padding-bottom: 3px;\n}\n\n.list-of-courses-li {\n  display: inline-block;\n  margin: 25px;\n\n}\n#booking {\n  display: flex;\n    flex-direction: row;\n    justify-content: center;\n\n}\n.tabs {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    cursor: pointer;\n}\n.map{\n    margin-top: 5%;\n    margin-left: -50%;\n}\n.map-text{\n    margin-top: 3%;\n    font-size: 30px;\n}\n.middle-part {\n    margin-left: 30%;\n}\n.empty-box {\n  box-sizing: border-box; \n  width: 100%;\n  margin-bottom: 150px;\n  margin-top: 150px;\n}\n</style>\n"]}]}
{"remainingRequest":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/aminmahmoudi/Desktop/DIT356/client 2/client/src/views/Home.vue?vue&type=style&index=0&id=fae5bece&lang=css&","dependencies":[{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/src/views/Home.vue","mtime":1673015509920},{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1655715156000},{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/aminmahmoudi/Desktop/DIT356/client 2/client/node_modules/vue-loader/lib/index.js","mtime":1655715099000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKLmNhbGVuZGFyT3V0bGluZSB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzc0OEZDNDsKICBib3JkZXItcmFkaXVzOiAxMHB4OwogIGJveC1zaGFkb3c6IDBweCA0cHggNHB4IHJnYmEoMTQzLCAxNDUsIDE5MCwgMC4yNSk7CiAgcGFkZGluZzogMTVweDsKICBtYXJnaW4tbGVmdDogMjBweDsKICBtYXJnaW4tcmlnaHQ6IDIwcHg7CiAgaGVpZ2h0OiA0MDBweDsKICBhbGlnbi1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwp9Ci5jYWxlbmRhciB7CiAgd2lkdGg6IDYwMHB4OwogIGhlaWdodDogMDBweDsKICBwYWRkaW5nLWxlZnQ6IDIwcHg7CiAgcGFkZGluZy1yaWdodDogMjBweDsKfQouY2FsZW5kYXIgdHI+dGQ6Zmlyc3QtY2hpbGQgKyB0ZHsKICAgcG9pbnRlci1ldmVudHM6IG5vbmU7CiAgIGNvbG9yOiByZWQ7Cn0KCi5zbG90IHsKICAgIG1hcmdpbi1sZWZ0OiA1cHg7CiAgICAgbWFyZ2luLWJvdHRvbTogNXB4OwogICAgZGlzcGxheTppbmxpbmUtYmxvY2s7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94OwogICAgaGVpZ2h0OiAzMHB4OwogICAgYmFja2dyb3VuZC1jb2xvcjogIzc0OEZDNDsKICAgIGNvbG9yOiAjZmZmZmZmOwogICAgYm9yZGVyLXJhZGl1czogMjNweDsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIGJvcmRlcjogMnB4IHNvbGlkICM3NDhGQzQ7CiAgICBib3gtc2hhZG93OiAwcHggNHB4IDRweCByZ2JhKDE0MywgMTQ1LCAxOTAsIDAuMjUpOwogIH0KICAuc2xvdDpob3ZlciB7CiAgICBvcGFjaXR5OiAwLjk7CiAgfQouY2xpbmljLWJveCB7CiAgICBoZWlnaHQ6IGF1dG87CiAgICBtYXJnaW4tdG9wOiAxNXB4OwogICAgcGFkZGluZy10b3A6IDExcHg7CiAgd2lkdGg6IDQ1MHB4OwogIGNvbG9yOiM3NDhGQzQ7CiAgYmFja2dyb3VuZDogI2ZmZmZmZjsKICAKICBib3JkZXItcmFkaXVzOiAxMHB4IDEwcHggMTBweCAxMHB4OwogIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgYm94LXNoYWRvdzogMHB4IDRweCA0cHggcmdiYSgxNDMsIDE0NSwgMTkwLCAwLjI1KTsKICBwYWRkaW5nLWJvdHRvbTogM3B4Owp9CgoubGlzdC1vZi1jb3Vyc2VzLWxpIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWFyZ2luOiAyNXB4OwoKfQojYm9va2luZyB7CiAgbWFyZ2luLXRvcDogMTQwcHg7CiAgZGlzcGxheTogZmxleDsKICBmbGV4LWRpcmVjdGlvbjogcm93OwogIGp1c3RpZnktY29udGVudDogY2VudGVyOwoKfQoudGFicyB7CiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmOwogICAgYm9yZGVyLXJhZGl1czogMTBweCAxMHB4IDEwcHggMTBweDsKICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7CiAgICBib3gtc2hhZG93OiAwcHggNHB4IDRweCByZ2JhKDE0MywgMTQ1LCAxOTAsIDAuMjUpOwogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICAgIGN1cnNvcjogcG9pbnRlcjsKICAgIHBhZGRpbmctcmlnaHQ6IDEwcHg7CiAgICBtYXJnaW4tbGVmdDogNDBweDsKfQoubWFwewogICAgbWFyZ2luLXRvcDogNSU7CiAgICBtYXJnaW4tbGVmdDogLTUwJTsKfQoubWFwLXRleHR7CiAgICBtYXJnaW4tdG9wOiAzJTsKICAgIGZvbnQtc2l6ZTogMzBweDsKfQoubWlkZGxlLXBhcnQgewogICAgbWFyZ2luLWxlZnQ6IDMwJTsKfQouZW1wdHktYm94IHsKICBib3gtc2l6aW5nOiBib3JkZXItYm94OyAKICB3aWR0aDogMTAwJTsKICBtYXJnaW4tYm90dG9tOiAxNTBweDsKICBtYXJnaW4tdG9wOiAxNTBweDsKfQo="},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;AAwaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <!-- Title -->\n    <div class=\"map-body\">\n     <p style=\"color: #748FC4;\" class=\"map-text\">FIND THE LOCATION OF YOUR CLINIC AND BOOK AN APPOINTMENT.</p>\n    </div>\n<div style=\"flex-direction: column;\">\n\n    <div style=\"display: flex;\n    flex-direction: row;\n    justify-content: center;\" >\n      <!-- Show Map -->\n     <div style=\"position: absolute; margin-right: 50%\">\n      <mapField></mapField>\n     </div>\n     <div>\n      <!-- Show Different Clinics -->\n     <div style=\"flex-direction: column; margin-left: 60%; padding: 7.5px\"  v-for=\"clinic in clinics\" v-bind:key=\"clinic._id\" >\n        <clinicSlot style=\"width: 550px;\" v-bind:clinic=\"clinic\" v-on:book-slot=\"startBooking\"/>\n    </div>\n  </div> \n    </div>\n\n    <!-- Show booking slots -->\n    <div id=\"booking\" v-if=\"slotsDisplayed\">\n      <div class=\"tabs\">\n        <TabNav :tabs=\"this.tabs\" :selected=\"selected\" @selected=\"setSelected\">\n          <Tab :isSelected=\"selected === 'Dentist1'\">\n              <ul class=\"list-of-courses-ul\">\n                <li class=\"list-of-courses-li\" v-for=\"slot in dL1\" v-bind:key=\"slot\">\n                 <button class=\"slot\"\n                 @click=\"webcamSendRequestButton($event)\"\n                 :value=\"slot\">\n                 {{ slot }}</button>\n                </li>\n              </ul>\n          </Tab>\n          <Tab :isSelected=\"selected === 'Dentist2'\">\n              <ul class=\"list-of-courses-ul\">\n                <li class=\"list-of-courses-li\" v-for=\"slot in dL2\" v-bind:key=\"slot\">\n                 <button class=\"slot\"\n                 @click=\"webcamSendRequestButton($event)\"\n                 :value=\"slot\">\n                 {{ slot }}</button>\n                </li>\n              </ul>\n          </Tab>\n          <Tab :isSelected=\"selected === 'Dentist3'\">\n              <ul class=\"list-of-courses-ul\">\n                <li class=\"list-of-courses-li\" v-for=\"slot in dL3\" v-bind:key=\"slot\">\n                 <button class=\"slot\"\n                 @click=\"webcamSendRequestButton($event)\"\n                 :value=\"slot\">\n                 {{ slot }}</button>\n                </li>\n              </ul>\n          </Tab>\n        </TabNav>\n      </div>\n\n      <!-- Show Calendar -->\n      <div class=\"calendarOutline\">\n        <div class=\"calendar\">\n        <DatePicker class=\"v-calendar\"\n        v-model=\"date\"\n        mode=\"date\"\n        is-inline\n        title-position=\"left\"\n        :min-date='new Date()'\n        :disabled-dates='{ weekdays: [1, 7] }'\n        :is-expanded=\"$screens({ default: true, lg: false })\"\n        :attributes='attributes'\n        @dayclick='dayClicked'\n      />\n      </div>\n\n      </div>\n\n    </div>\n</div>\n\n  </div>\n</template>\n\n<script>\nimport TabNav from '../components/TabNav.vue'\nimport Tab from '../components/Tab.vue'\nimport clinicSlot from '../components/ClinicSlots.vue'\nimport mapField from '../components/Map.vue'\nimport { Calendar, DatePicker } from 'v-calendar';\nimport mqtt from '../MQTT'\nimport router from '../router'\n\nexport default {\n  name: 'home',\n  props: ['home'],\n  components: { TabNav, Tab, clinicSlot, mapField, Calendar, DatePicker},\n  mounted() {\n    this.getClinics();\n  },\n  data() {\n    return {\n      dL1: [],\n      Dentist1: [],\n      dL2: [],\n      dL3: [],\n      tabs: [],\n      selected: \"Dentist1\",\n      message: 'none',\n      date: new Date(),\n      selectedDay: new Date(),\n      clinics: '',\n      clinicName: '',\n      slotsDisplayed: false,\n\n      fulls: []\n    }\n  },\n  computed: {\n    attributes() {\n      return this.fulls.map(f => ({\n        key: `full.${f.id}`,\n        highlight: \"red\",\n        dates: f.date,\n        customData: f,\n        popover: {\n          label: f.description,\n          visibility: 'focus',\n          hideIndicator: true,\n        }\n      }));\n    }\n  },\n  watch: {\n    selectedDay(newValue, oldValue) {\n      this.startBooking(this.clinicName)\n    }\n  },\n  methods: {\n   addClinic: function () {\n      this.newClinic = {\n        id: '4',\n        name: 'Lisebergs Dentists',\n        owner: 'Glen HysÃ©n',\n        dentists: 3,\n        address: 'Liseberg',\n        city: 'Gothenburg',\n        coordinate: [\n          { longitude: 11.991153 },\n          { latitude: 57.694723 }\n        ],\n        openinghours: [\n          { monday: '10:00-18:00' },\n          { tuesday: '10:00-18:00' },\n          { wednesday: '10:00-18:00' },\n          { thursday: '10:00-18:00' },\n          { friday: '10:00-18:00' }\n        ]\n      }\n      const result = mqtt('postC', '/clinics', this.newClinic, true)\n      if (result.status === 200) {\n        console.log('succesfull')\n      } else {\n        console.log('unsuccsesfull')\n      }\n    },\n    \n    webcamSendRequestButton(e) {\n     if (!this.selectedDay.date) {\n      let date = new Date(this.selectedDay)\n      date = date.toISOString().replace('.000Z', '')\n      router.push({ path: '/booking', query: { name: this.clinicName, date: date, time: e.target.textContent, dentist: this.selected} })\n     } else {\n      router.push({ path: '/booking', query: { name: this.clinicName, date: this.selectedDay.id, time: e.target.textContent, dentist: this.selected} })\n     }\n\n  },\n    setSelected(Tab) {\n      this.selected = Tab\n    },\n    startBooking(name) {\n      this.slotsDisplayed = true\n      setTimeout(() =>{\n        let dateStr\n      let date \n      let array\n      let day\n      if(this.selectedDay.isDisabled !== false && this.selectedDay.isDisabled) {\n        this.dL1 = []\n        this.dL2 = []\n        this.dL3 = []\n      } else {\n\n      if (!this.selectedDay.date) {\n        dateStr = this.selectedDay\n        date = new Date(dateStr).toISOString()\n        day = dateStr.getUTCDay() - 1\n\n      } else {\n        date = this.selectedDay.id\n        array = this.selectedDay.ariaLabel.split(',')\n        day = array[0]\n      }\n      document.getElementById('booking').scrollIntoView({\n        behavior: \"smooth\"\n      });\n      this.clinicName = name\n      let result = this.getTimeStops(day, name)\n      setTimeout(() => {\n        this.removeBooked(date, result, name)\n      }, 50)\n      }\n\n\n      }, 100)\n      \n    },\n    parseJwt(token) {\n      const base64Url = token.split('.')[1]\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/')\n      const jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\n      }).join(''))\n      let user = JSON.parse(jsonPayload)\n      return user\n\n    },\n\n    //Get all available clinics\n    getClinics() {\n      let data = {\n        token: localStorage.getItem('loginToken')\n      }\n      let response = mqtt('getAllC', '/clinics', data, true)\n      setTimeout(() => {\n        this.clinics = response[0].data.dentists\n      }, 1000)\n    },\n    dayClicked(day) {\n      this.selectedDay = day;\n    },\n    removeBooked: function (date, list, clinic) {\n      const data = {}\n      let result = mqtt('getAllBookingsOfClinic', '/bookings', data, true)\n      setTimeout(() => {\n        let bookings = result[0].data.bookings\n        let size = bookings.length \n        \n        for (let i = size - 1; i >= 0; i--) {\n          if (bookings[i].date.substr(0,10) != date.substr(0,10) || bookings[i].clinicName !== clinic) {\n            bookings.splice(i, 1)\n          }\n        }\n        for (let i = 0; i < bookings.length; i++) {\n        if (bookings[i].dentistId === 1) {\n          const index = this.dL1.indexOf(bookings[i].time)\n          if(index !== -1) {\n            this.dL1.splice(index, 1)\n          }\n        } else if (bookings[i].dentistId === 2) {\n          const index = this.dL2.indexOf(bookings[i].time)\n          if(index !== -1) {\n            this.dL2.splice(index, 1)\n          }\n        } else if (bookings[i].dentistId === 3) {\n          const index = this.dL3.indexOf(bookings[i].time)\n          if(index !== -1) {\n            this.dL3.splice(index, 1)\n          }\n        }\n      }\n\n      var today = new Date();\n      console.log(today.getMonth()+1, today.getDate())\n      var todayDay = today.getDate()\n      var todayMonth = today.getMonth()+1\n      var time = today.getHours() + \":\" + today.getMinutes()\n      if (todayDay < 10) {\n        todayDay = '0' + todayDay;\n      }\n      if (todayMonth < 10) {\n        todayMonth = `0${todayMonth}`;\n      }\n      var todayDate = today.getFullYear()+'-'+todayMonth+'-'+todayDay;\n      console.log(date.substr(0,10), todayDate)\n      if(date.substr(0,10) === todayDate) {\n        for (let i = this.dL1.length; i >= 0; i--) {\n          if (this.dL1[i] < time) {\n            this.dL1.splice(i, 1)\n          }\n        }\n        for (let i = this.dL2.length; i >= 0; i--) {\n          if (this.dL2[i] < time) {\n            this.dL2.splice(i, 1)\n          }\n        }\n        for (let i = this.dL3.length; i >= 0; i--) {\n          if (this.dL3[i] < time) {\n            this.dL3.splice(i, 1)\n          }\n        }\n\n      }\n      }, 1000)\n    },\n    book: function () {\n      this.newBooking = {\n        userId: this.userId,\n        requestId: this.requestId,\n        dentistId: this.dentistId,\n        issuance: this.issuance,\n        date: this.newDate\n      }\n      const result = mqtt('book', '/bookings', this.newBooking, true)\n      setTimeout(() => {\n        if (result.status === 201) {\n          console.log('succesfull')\n        } else {\n          console.log('unsuccsesfull')\n        }\n      }, 1000)\n    },\n\n    getTimeStops: function (day, clinic) {\n      const clinics = mqtt('getAllC', '/clinics', this.data, true)\n      let start\n      let end\n      let openingHours\n      this.clinicName = clinic\n      const finalSlots = []\n      setTimeout(() => {\n        if(!clinics[0].data.dentists) {\n          localStorage.removeItem('loginToken')\n        } else {\n        const resultClinic = clinics[0].data.dentists\n        for (let i = 3; i >= 0; i--) {\n          if (resultClinic[i].name !== clinic) {\n            resultClinic.splice(i, 1)\n          }\n        }\n        if (day === 'Monday' || day === 0) {\n          openingHours = resultClinic[0].openinghours[0].monday\n        } else\n        if (day === 'Tuesday' || day === 1) {\n          openingHours = resultClinic[0].openinghours[1].tuesday\n        } else\n        if (day === 'Wednesday' || day === 2) {\n          openingHours = resultClinic[0].openinghours[2].wednesday\n        } else\n        if (day === 'Thursday' || day === 3) {\n          openingHours = resultClinic[0].openinghours[3].thursday\n        } else\n        if (day === 'Friday' || day === 4) {\n          openingHours = resultClinic[0].openinghours[4].friday\n        }\n        const timeStopsD1 = []\n        const timeStopsD2 = []\n        const timeStopsD3 = []\n        const array = openingHours.split('-')\n        start = array[0]\n        end = array[1]\n        let startTime = moment(start, 'HH:mm')\n        const endTime = moment(end, 'HH:mm')\n        const breakS = '12:00'\n        const breakE = '13:30'\n        let breakStart = moment(breakS, 'HH:mm')\n        const breakEnd = moment(breakE, 'HH:mm')\n        if (endTime.isBefore(startTime)) {\n          endTime.add(1, 'day')\n        }\n        while (startTime <= endTime) {\n          timeStopsD1.push((new moment(startTime).format('HH:mm')))\n          timeStopsD2.push((new moment(startTime).format('HH:mm')))\n          timeStopsD3.push((new moment(startTime).format('HH:mm')))\n          startTime = startTime.add(30, 'minutes')\n        }\n        while (breakStart < breakEnd) {\n          const index1 = timeStopsD1.indexOf((new moment(breakStart).format('HH:mm')))\n          const index2 = timeStopsD2.indexOf((new moment(breakStart).format('HH:mm')))\n          const index3 = timeStopsD3.indexOf((new moment(breakStart).format('HH:mm')))\n          if (index1 > -1) {\n            timeStopsD1.splice(index1, 1)\n          }\n          if (index2 > -1) {\n            timeStopsD2.splice(index2, 1)\n          }\n          if (index3 > -1) {\n            timeStopsD3.splice(index3, 1)\n          }\n          breakStart = breakStart.add(30, 'minutes')\n        }\n        this.tabs = []\n        for (let j = 0; j < resultClinic[0].dentists; j++) {\n          let tab = 'Dentist' + (j+1)\n          this.tabs.push(tab)\n          this.tab = timeStopsD1\n          if(resultClinic[0].dentists === 1) {\n            this.dL1 = timeStopsD1\n            finalSlots.push(timeStopsD1)\n          } else if(resultClinic[0].dentists === 2) {\n            this.dL1 = timeStopsD1\n            this.dL2 = timeStopsD2\n            finalSlots.push(timeStopsD1)\n            finalSlots.push(timeStopsD2)\n          } else if(resultClinic[0].dentists === 3) {\n            this.dL1 = timeStopsD1\n            this.dL2 = timeStopsD2\n            this.dL3 = timeStopsD3\n            finalSlots.push(timeStopsD1)\n            finalSlots.push(timeStopsD2)\n            finalSlots.push(timeStopsD3)\n          }\n        }\n        }\n      }, 1000)\n      return finalSlots\n    }\n  }\n}\n</script>\n\n<style>\n\n\n.calendarOutline {\n  background-color: #748FC4;\n  border-radius: 10px;\n  box-shadow: 0px 4px 4px rgba(143, 145, 190, 0.25);\n  padding: 15px;\n  margin-left: 20px;\n  margin-right: 20px;\n  height: 400px;\n  align-content: space-between;\n}\n.calendar {\n  width: 600px;\n  height: 00px;\n  padding-left: 20px;\n  padding-right: 20px;\n}\n.calendar tr>td:first-child + td{\n   pointer-events: none;\n   color: red;\n}\n\n.slot {\n    margin-left: 5px;\n     margin-bottom: 5px;\n    display:inline-block;\n    text-align: center;\n    box-sizing: border-box;\n    height: 30px;\n    background-color: #748FC4;\n    color: #ffffff;\n    border-radius: 23px;\n    cursor: pointer;\n    border: 2px solid #748FC4;\n    box-shadow: 0px 4px 4px rgba(143, 145, 190, 0.25);\n  }\n  .slot:hover {\n    opacity: 0.9;\n  }\n.clinic-box {\n    height: auto;\n    margin-top: 15px;\n    padding-top: 11px;\n  width: 450px;\n  color:#748FC4;\n  background: #ffffff;\n  \n  border-radius: 10px 10px 10px 10px;\n  box-sizing: border-box;\n  box-shadow: 0px 4px 4px rgba(143, 145, 190, 0.25);\n  padding-bottom: 3px;\n}\n\n.list-of-courses-li {\n  display: inline-block;\n  margin: 25px;\n\n}\n#booking {\n  margin-top: 140px;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n\n}\n.tabs {\n    background: #ffffff;\n    border-radius: 10px 10px 10px 10px;\n    box-sizing: border-box;\n    box-shadow: 0px 4px 4px rgba(143, 145, 190, 0.25);\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    cursor: pointer;\n    padding-right: 10px;\n    margin-left: 40px;\n}\n.map{\n    margin-top: 5%;\n    margin-left: -50%;\n}\n.map-text{\n    margin-top: 3%;\n    font-size: 30px;\n}\n.middle-part {\n    margin-left: 30%;\n}\n.empty-box {\n  box-sizing: border-box; \n  width: 100%;\n  margin-bottom: 150px;\n  margin-top: 150px;\n}\n</style>\n"]}]}